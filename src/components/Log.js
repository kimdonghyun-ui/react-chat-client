import React,{useEffect,useState} from "react";
import { makeStyles } from "@material-ui/core/styles";

import CssBaseline from "@material-ui/core/CssBaseline";

import Typography from "@material-ui/core/Typography";
import Grid from '@material-ui/core/Grid';
import Paper from "@material-ui/core/Paper";
import Alert from '@material-ui/lab/Alert';
import Box from "@material-ui/core/Box";
import ListItem from "@material-ui/core/ListItem";
import ListItemAvatar from "@material-ui/core/ListItemAvatar";
import ListItemText from "@material-ui/core/ListItemText";
import ListSubheader from "@material-ui/core/ListSubheader";
import Avatar from "@material-ui/core/Avatar";

const messages = [
  {
    id: 1,
    primary: "dongdong",
    secondary: "금주바보",
    person: "/static/images/avatar/5.jpg",
  },
  {
    id: 2,
    primary: "Birthday Gift",
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: "/static/images/avatar/1.jpg",
  },
  {
    id: 3,
    primary: "Recipe to try",
    secondary:
      "I am try out this new BBQ recipe, I think this might be amazing",
    person: "/static/images/avatar/2.jpg",
  },
  {
    id: 4,
    primary: "Yes!",
    secondary: "I have the tickets to the ReactConf for this year.",
    person: "/static/images/avatar/3.jpg",
  },
  {
    id: 5,
    primary: "Doctor's Appointment",
    secondary:
      "My appointment for the doctor was rescheduled for next Saturday.",
    person: "/static/images/avatar/4.jpg",
  },
  {
    id: 6,
    primary: "Discussion",
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: "/static/images/avatar/5.jpg",
  },
  {
    id: 7,
    primary: "Summer BBQ",
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: "/static/images/avatar/1.jpg",
  },
];

const useStyles = makeStyles((theme) => ({
  text: {
    padding: theme.spacing(2, 2, 0),
  },
  paper: {
    paddingBottom: 50,
  },
  list: {
    marginBottom: theme.spacing(2),
  },
  subheader: {
    backgroundColor: theme.palette.background.paper,
  },
  appBar: {
    top: "auto",
    bottom: 0,
  },
  grow: {
    flexGrow: 1,
  },
  fabButton: {
    position: "absolute",
    zIndex: 1,
    top: -30,
    left: 0,
    right: 0,
    margin: "0 auto",
  },
}));

const Log = ({currentSocket}) => {
  const classes = useStyles();

  const [msgList, setMsgList] = useState([]);

  useEffect(() => {
  
    
    return () => {
     // currentSocket.disconnect();
    };
  }, [currentSocket]);

 

  if (msgList.length === 0) {
    var t = localStorage.getItem('msgList');
    console.log(t);
    console.log(JSON.parse(t));
    //if(localStorage.getItem('msgList'))
    //setMsgList(localStorage.getItem('msgList'));
    if (localStorage.getItem('msgList') !== null) {
      //setMsgList(localStorage.getItem('msgList'));
      //console.log(localStorage.getItem('msgList'));
      setMsgList(JSON.parse(t));
      //({t});
      //console.log(typeof setMsgList);
    } 
   
  } else {
    localStorage.setItem("msgList", JSON.stringify(msgList));
  }


  
  

  return (
    <React.Fragment>
      <CssBaseline />
      <Paper square className={classes.paper}>
        <Typography className={classes.text} variant="h5" gutterBottom>
          Inbox
        </Typography>
        <Box className={classes.list} m={2}>
          {msgList.map((msg, idx) => (
            <Grid
              container
              direction="column"
              justify="center"
              alignItems="flex-start"
              spacing={1}
              key={idx}
              style={{ marginBottom:'40px'}}
            >
              <Grid item xs>
                <Avatar alt="Remy Sharp" src='https://material-app.bootlab.io/static/img/avatars/avatar-1.jpg' />
              </Grid>
              <Grid item xs>
                <Alert icon={false} severity="success">
                  <strong>{msg.userId}</strong>
                  {msg.msg}
                </Alert>
                {msg.timeStamp}
              </Grid>
            </Grid>
          ))}
        </Box>
      </Paper>
    </React.Fragment>
  );
};

export default Log;
